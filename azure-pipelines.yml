pr:
    branches:
        include:
            - main
            - dev
            - v3.x

trigger:
    - main
    - dev
    - v3.x

jobs:
    - job: Test
      strategy:
          matrix:
              UBUNTU_NODE18:
                  IMAGE_TYPE: "ubuntu-latest"
                  NODE_VERSION: $(NODE_18)
              WINDOWS_NODE18:
                  IMAGE_TYPE: "windows-latest"
                  NODE_VERSION: $(NODE_18)
              MAC_NODE18:
                  IMAGE_TYPE: "macOS-latest"
                  NODE_VERSION: $(NODE_18)
      pool:
          vmImage: $(IMAGE_TYPE)
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: $(NODE_VERSION)
            displayName: "Install Node dependencies"
          - script: npm ci
            displayName: "npm ci"
          - script: npm run test
            displayName: "npm build and test"
          - script: npm run test:nolint
            displayName: "npm build and test (no linting)"
          - script: npm run build
            displayName: "npm run build"
          - script: npm pack
            displayName: "npm pack"
          - script: mv durable-functions-*.tgz package.tgz
            displayName: "Rename package file"
    - job: BuildArtifacts
      pool:
          name: "1ES-Hosted-AzFunc"
          demands:
              - ImageOverride -equals MMSUbuntu20.04TLS
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: $(NODE_18)
            displayName: "Install Node.js"
          - script: npm ci
            displayName: "npm ci"
          - script: npm run-script build
            displayName: "npm run-script build"
          - script: npm prune --production
            displayName: "npm prune --production" # so that only production dependencies are included in SBOM
          - task: ManifestGeneratorTask@0
            displayName: "SBOM Generation Task"
            inputs:
                BuildDropPath: "$(System.DefaultWorkingDirectory)"
                Verbosity: "Information"
          - script: npm pack
            displayName: "pack npm package"
          - task: CopyFiles@2
            displayName: "Copy package to staging"
            inputs:
                SourceFolder: $(System.DefaultWorkingDirectory)
                Contents: "*.tgz"
                TargetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishBuildArtifacts@1
            inputs:
                PathtoPublish: "$(Build.ArtifactStagingDirectory)"
                ArtifactName: "drop"
                publishLocation: "Container"
