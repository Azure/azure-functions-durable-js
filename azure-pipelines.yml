variables:
    { MODULE_VERSION: "1.2.2", NODE_10: "10.x", NODE_12: "12.x", NODE_14: "14.x", NODE_16: "16.x" }
name: $(MODULE_VERSION)-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
    - main
    - dev

jobs:
    - job: UnitTests
      strategy:
          matrix:
              UBUNTU_NODE10:
                  IMAGE_TYPE: "ubuntu-latest"
                  NODE_VERSION: $(NODE_10)
              UBUNTU_NODE14:
                  IMAGE_TYPE: "ubuntu-latest"
                  NODE_VERSION: $(NODE_14)
              UBUNTU_NODE16:
                  IMAGE_TYPE: "ubuntu-latest"
                  NODE_VERSION: $(NODE_16)
              WINDOWS_NODE10:
                  IMAGE_TYPE: "windows-latest"
                  NODE_VERSION: $(NODE_10)
              WINDOWS_NODE14:
                  IMAGE_TYPE: "windows-latest"
                  NODE_VERSION: $(NODE_14)
              WINDOWS_NODE16:
                  IMAGE_TYPE: "windows-latest"
                  NODE_VERSION: $(NODE_16)
              MAC_NODE10:
                  IMAGE_TYPE: "macOS-latest"
                  NODE_VERSION: $(NODE_10)
              MAC_NODE14:
                  IMAGE_TYPE: "macOS-latest"
                  NODE_VERSION: $(NODE_14)
              MAC_NODE16:
                  IMAGE_TYPE: "macOS-latest"
                  NODE_VERSION: $(NODE_16)
      pool:
          vmImage: $(IMAGE_TYPE)
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: $(NODE_VERSION)
            displayName: "Install Node.js"
          - script: npm install
            displayName: "npm install"
          - script: npm run test
            displayName: "npm build and test"
            condition: ne(variables['NODE_VERSION'], variables['NODE_8'])
          - script: npm run test:nolint
            displayName: "npm build and test (no linting)"
            condition: eq(variables['NODE_VERSION'], variables['NODE_8'])
          - task: ManifestGeneratorTask@0
            displayName: "SBOM Generation Task"
            inputs:
                BuildDropPath: "$(Build.ArtifactStagingDirectory)"
                Verbosity: "Information"
